<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>